<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>